<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>